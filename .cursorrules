# 种族歧视词汇教育网站 - 开发规范

## 项目概述
这是一个教育性的种族歧视词汇解释网站，纯前端项目，使用Next.js开发。

## 技术栈要求
- Next.js 14 (App Router)
- TypeScript
- Tailwind CSS
- Fuse.js (搜索功能)
- 响应式设计

## 编码规范

### 语言使用
- **代码注释**: 使用中文注释
- **文档说明**: 使用中文
- **网站内容**: 使用地道的英文表达
- **变量命名**: 使用英文驼峰命名法
- **组件命名**: 使用英文PascalCase

### 文件结构
- 组件放在 `src/components/` 目录
- 页面放在 `src/app/` 目录 (App Router)
- 数据文件放在 `src/data/` 目录
- 样式文件放在 `src/styles/` 目录

### 组件开发
- 使用函数式组件
- 使用TypeScript类型定义
- 组件要有清晰的props接口
- 添加适当的JSDoc注释

### 样式规范
- 优先使用Tailwind CSS类名
- 自定义样式放在 `globals.css`
- 确保响应式设计
- 保持现代、易接近的设计风格

## 内容要求

### 词汇数据结构
每个词汇应包含：
- id: 唯一标识符
- slug: URL友好的标识
- term: 词汇名称
- definition: 定义解释
- history: 历史背景
- context: 使用场景
- impact: 社会影响
- category: 分类标签
- tags: 相关标签
- relatedTerms: 相关词汇

### SEO优化
- 每个页面都要有合适的meta标签
- 使用语义化HTML标签
- 添加结构化数据
- 优化页面加载速度
- 确保移动端友好

## 功能要求

### 搜索功能
- 支持关键词搜索
- 支持模糊匹配
- 实时搜索结果
- 搜索历史记录

### 分类功能
- 按严重程度分类
- 按使用场景分类
- 按历史时期分类
- 标签筛选功能

### 用户体验
- 快速加载
- 直观导航
- 清晰的信息层次
- 无障碍访问支持

## 开发优先级
1. 基础项目结构搭建
2. 核心组件开发
3. 词汇数据结构和示例内容
4. 搜索和分类功能
5. SEO优化
6. 性能优化

## 注意事项
- 内容要客观、教育性
- 避免煽动性语言
- 注重用户体验
- 保持代码整洁和可维护性
- 定期测试和优化 